openapi: 3.0.0
info:
  title: Bookstore API
  version: 1.0.0
servers:
  - url: 'http://api.example.com/v55'
paths:
  /books:
    get:
      summary: List all books!!!!!12ddasdas22??!!!
      parameters:
        - in: query
          name: genre
          schema:
            type: string
          description: Filter books by genres
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Book created successfully
  '/books/{id}':
    get:
      summary: Get a single book by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Unique ID of the book
      responses:
        '200':
          description: A single book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    put:
      summary: Update a book by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Unique ID of the book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Book updated successfully
    delete:
      summary: Delete a book by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Unique ID of the book
      responses:
        '204':
          description: Book deleted successfully
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        author:
          type: string
        genre:
          type: string
        publishedYear:
          type: integer
          format: int32
        price:
          type: number
          format: float
    Publisher:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
